version: '3.3'

services:
  proxy:
    env_file: .env.prod
    container_name: proxy-blglib
    build:
      context: ./proxy
      dockerfile: Dockerfile.proxy
    image: proxy-img
    volumes:
      # - ./nginx/:/etc/nginx/:ro
      - ./certbot/www/:/var/www/certbot/:ro
    ports:
      - 80:80
      - 443:443
    depends_on:
      - main-page
    restart: "no"
    networks:
      - "api"
      - "main-page"

  certbot:
    container_name: certbot-blglib
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw

  main-page:
    env_file: .env.prod
    container_name: main-page-blglib
    build:
      context: ./main-page
      dockerfile: Dockerfile.main-page
    image: main-page-img
    expose:
      - 80
    restart: "no"
    networks:
      - "main-page"

  api:
    env_file: .env.prod
    container_name: api-blglib
    build:
      context: ./api
      dockerfile: Dockerfile.api
    image: api-img
    command: npm start
    # ports:
    #   - 4000:4000
    expose:
      - 4000
    depends_on:
      - mongodb
    restart: on-failure
    networks:
      - "api"

  mongodb:
    env_file: [ .env.mongo, .env.prod]
    container_name: mongodb-blglib
    image: mongo:latest
    volumes:
      - mongodb-data:/data/db
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro  # create user <--
    # ports:
    #   - 27017:27017
    expose:
      - 27017
    restart: on-failure
    networks:
      - "api"

volumes:
  mongodb-data:

networks:
  api:
    external:
      name: api-net
  main-page:
    external:
      name: main-page-net
  
